#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

# debug
# set -x

# parse and derive params
BUILD_DIR=$1
CACHE_DIR=$2
LP_DIR=`cd $(dirname $0); cd ..; pwd`

BIN_DIR=$(cd $(dirname $0); pwd) # absolute path
ROOT_DIR=$(dirname $BIN_DIR)
ENV_DIR=$3

function error() {
  echo " !     $*" >&2
  exit 1
}

function topic() {
  echo "-----> $*"
}

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

source $BIN_DIR/compile_steps/env

export OSRM_VERSION=${OSRM_VERSION:-5.22.0}
topic "Using OSRM version $OSRM_VERSION"

source $BIN_DIR/compile_steps/apt

if [ -f $CACHE_DIR/$OSRM_VERSION/osrm-extract ] && [ -f $CACHE_DIR/$OSRM_VERSION/osrm-routed ] && [ -d $CACHE_DIR/$OSRM_VERSION/profiles ]; then
  topic "Using cached OSRM binaries"
  cp $CACHE_DIR/$OSRM_VERSION/osrm-* $BUILD_DIR
  cp -r $CACHE_DIR/$OSRM_VERSION/profiles $BUILD_DIR
else
  source $BIN_DIR/compile_steps/osrm_build
fi

cp -r $1/src/profiles/ $1/
cp $1/$OSRM_PROFILE $1/profiles/profile.lua

if [ ! -f $BUILD_DIR/Procfile ]; then
  topic "Define Procfile"
  echo "web: /app/startup \$PORT" > $BUILD_DIR/Procfile
  echo "web: /app/startup \$PORT" > /app/Procfile
  echo "web: /app/startup \$PORT" > ./Procfile
fi
